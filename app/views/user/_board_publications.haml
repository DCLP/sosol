:javascript

  function showExtraIds(ref_number, icon_node)
  {
    var node_name = "extra_ids_" + ref_number;
    //alert(node_name);
    //$(node_name).style.top = "0px";
    //$(node_name).style.left = "0px";
    $(node_name).style.zIndex = "99";
    //$(node_name).show;
    
    
    //.visibility = "hidden"
    var img_node = $(icon_node).select('img');
    
    if ( $(node_name).style.visibility == "hidden" )
    {
      $(node_name).style.visibility = "visible"
      img_node[0].src = '../images/hide_more_ids.png';
    }
    else
    {
      $(node_name).style.visibility = "hidden"
      img_node[0].src = '../images/show_more_ids.png';
    }
  }
  
  
  function sortByNeedsReview()
  {
    //remove needs review divs
    var list_node = $('board_publication_list_holder');
    var review_nodes = list_node.select('div[class~=needs_review]');
    var new_list = new Array();
    for (var i=0; i < review_nodes.length; i++)
    {
      review_nodes[i].parentNode.parentNode.remove;
      new_list.push(review_nodes[i].parentNode.parentNode);
      new_list[i].remove;
    }
        
    //for (var i=0;i<new_list.length; i++)
    {
    //  list_node.insert( {'top': new_list[i] } );
    }
    
    for (var i= new_list.length - 1; i >=0;i--)
    {
      list_node.insert( {'top': new_list[i] } );
    }

  }
  

  function sortByBoard(board_name)
  {
    
    var list_node = $('board_publication_list_holder');
    var select_statement = 'div[class~=publication_holder ' + board_name + ']';
    var board_nodes = list_node.select(select_statement);//'div[class~=publication_holder Text]');
    var new_list = new Array();
    for (var i=0; i < board_nodes.length; i++)
    {
      board_nodes[i].remove;//dont need to do
      new_list.push(board_nodes[i]);
      new_list[i].remove;
    }
        
    //for (var i=0;i<new_list.length; i++)
    {
    //  list_node.insert( {'top': new_list[i] } );
    }
    
    for (var i= new_list.length - 1; i >=0;i--)
    {
      list_node.insert( {'top': new_list[i] } );
    }

  }
  
  
  function hideExtraIds()
  {
    var extra_nodes = $$('div[class~=extra_ids]');
    for (var i=0; i< extra_nodes.length; i++)
    {
     
      extra_nodes[i].style.visibility = 'hidden';
     
    }
  
  }
  

  window.onload = function local_load()
  {
    hideExtraIds();  
  }
  
  

= stylesheet_link_tag "publication_list"


- if boards.length > 0
  %div
    %div{:class => "board_publications_header_review" + " sort_button", :onclick => "sortByNeedsReview()" }
      Sort by Needs Review
    - boards.each do |b|
      %div{:class => "sort_button", :onclick => "sortByBoard( '#{b.friendly_name}' )" }
        = "Sort by " + b.friendly_name  + " board."
        
    %div{:class => "board_publications_header_holder" }
     
      %div{:class => "board_publications_header_title", :onclick => "" }
        Title
      %div{:class => "board_publications_header_overview"}
        Overview
      - possible_identifiers = Array.new(Identifier::IDENTIFIER_SUBCLASSES)
      - if possible_identifiers.length > 0

        - possible_identifiers.each do |pi|
          %div{:onclick => "", :class => "board_publications_header_" + pi }
            = pi
            
   
  %div{:class => "user_publications_header_holder" }
    %div{:class => "board_publications_header_board" + " sort_header", :onclick => "sortByBoard()" }
      Board
    %div{:class => "user_publications_header_title" + " sort_header", :onclick => "sortByTitle()" }
      Title
    %div{:class => "user_publications_header_overview"}
      Overview
    - possible_identifiers = Array.new(Identifier::IDENTIFIER_SUBCLASSES)
    - if possible_identifiers.length > 0
    
      - possible_identifiers.each do |pi|
        %div{:class => "user_publications_header_" + pi }
          
          
          %div{:onclick => "sortByStatus('#{pi}', 'editing')", :class => "status_sort_button"}
            = image_tag('status_editing.png')
          %div{:onclick => "sortByStatus('#{pi}', 'submitted')", :class => "status_sort_button"}
            = image_tag('status_submitted.png')        
          %div{:onclick => "sortByStatus('#{pi}', 'approved')", :class => "status_sort_button"}
            = image_tag('status_approved.png')        
          %div{:onclick => "sortByStatus('#{pi}', 'finalized')", :class => "status_sort_button"}
            = image_tag('status_committed.png')        
          = eval pi + "::FRIENDLY_NAME"
      

    

  %div{:class => "publication_list_holder", :id => "board_publication_list_holder" }
    - boards.each do |board| 
      - finalizing_publications =  @board_final_pubs.collect{|p| ((p.parent.owner == board)) ? p : nil}.compact
      - approved_publications = board.publications.collect{|p| p.status == "approved" ? p :nil}.compact
      -#remove approved publications if in the finalizer list
      - finalizing_publications.each do |fp|
        -#remove it from the list of approved publications
        - approved_publications.each do |ap|
          - if fp.origin == ap.origin
            - approved_publications.delete(ap)
         
      - board.publications.each do |publication|
        - if publication.status != 'archived' && publication.status != 'committed'
          %div{:class => "publication_holder " + board.friendly_name, :id => "publication_holder_" + board.friendly_name }
            %div{:class => "publication_board_name"}
              = board.friendly_name
            %div{:class => "publication " + "status_" + publication.status, :id =>  "publication_" + publication.id.to_s}
              = publication.title
            
            %div{:class => "overview_holder"}
              = link_to( image_tag('documents.png', :border => "0", :alt => "Publication Overview") , publication)
            
            
            - id_set = Set.new(publication.identifiers)
            - id_hash = id_set.classify { |id| id.class.name }
            -# id_hash.each do |hash_item|
              = hash_item[0] #classified value (ie name)
              = hash_item[1].count #number of items found
              = hash_item[1].each do |hashed_id|
                = hashed_id.title #why the # sign?
            
           
            - identifiers_to_show = Array.new(Identifier::IDENTIFIER_SUBCLASSES)
            - id_hash.each_pair do |k,v|
              - identifiers_to_show.delete(k)
              
   
   
   
   
            -#/////////////////
   
              %div{:class => "identifier_holder " + k}
            
              -# find status..for multiples id do what?
              
              - if v.count == 1
                -# ouput the only thing
                - needs_review = (v.needs_reviewing?(@current_user)  ? ' needs_review ' : '')
                %div{:class => "identifier" + " status_" + v.status +  " controlled_" + (board.controls_identifier?(v)  ? 'yes' : 'no') + needs_review, :id => "identifier_" + v.id.to_s}
                  
                  - if v.first.modified
                    %div{:class => "identifier_holder_status_" + v.first.status }
                      = image_tag('status_icons.png')
                  - else
                    %div{:class => "identifier_holder_status_not_modified" }
                      = image_tag('status_icons.png')
                  %div{:class=> "identifier_title"}                  
                    = link_to v.first.title.strip, edit_polymorphic_path([publication, v.first])
            
              
              - elsif v.count > 1
                - extra_id_count = extra_id_count + 1;
                
                
                -v.each do |possible_modified|
                  - if possible_modified.modified
                    %div{:class => "identifier_holder_status_" + possible_modified.status }
                      = image_tag('status_icons.png')
                    %div{:class=> "identifier_title"}                  
                      = link_to possible_modified.title.strip, edit_polymorphic_path([publication,possible_modified])
                    - break
                
                %div{:class => "show_more_ids", :onclick => "showExtraIds( '#{extra_id_count}', this)" }
                  = image_tag('show_more_ids.png')
                
           
                -# make popup for all the ids
                %div{:class => "extra_ids", :id => "extra_ids_" + extra_id_count.to_s}
                
                  
                  - v.each do |extra_id|
                    %div{:class => "identifier"}
                      
                      - if extra_id.modified
                        %div{:class => "identifier_holder_status_" + extra_id.status }
                          = image_tag('status_icons.png')
                      - else
                        %div{:class => "identifier_holder_status_not_modified" }
                          = image_tag('status_icons.png')
                      %div{:class=> "identifier_title"}                  
                        = link_to extra_id.title.strip, edit_polymorphic_path([publication, extra_id])
                
      
    
            -#/////////////////  
            -#         
              %div{:class => "identifier_holder " + k}
              
                -# find status..for multiples id do what?
                -# if v.length > 0 #if only one, show status
                  %div{:class => "identifier_holder_status_" + v.first.status }

                      
                -# if v.length > 1
                  %div{:class => "expand_identifier_offsets", :onclick => "showOffsets(this)"}
                    expand
                
                - offset_class = ""
                - v.each do |vv| #add count? for offsetting?
                  - needs_review = (vv.needs_reviewing?(@current_user)  ? ' needs_review ' : '')
                  %div{:class => "identifier status_" + vv.status +  " controlled_" + (board.controls_identifier?(vv)  ? 'yes' : 'no') + needs_review + offset_class, :id => "identifier_" + vv.id.to_s}
                    - if vv.modified
                      %div{:class => "identifier_holder_status_" + vv.status }
                        = image_tag('status_icons.png')
                    - else
                      %div{:class => "identifier_holder_status_" }
                        = image_tag('status_icons.png')                    
                    %div{:class=> "identifier_title"}
                      = vv.title.strip
                    - if offset_class == "" && v.length > 1
                      %div{:class => "expand_identifers", :onclick => "showOffsets(this)" }
                        = "+"
                  - offset_class = " offset "
                    
            - identifiers_to_show.each do |is|
              %div{:class => "identifier_holder " + is}
            
            -# publication.identifiers.each do |identifier|
              %div{:class => "identifier status_" + identifier.status +  " controlled_" + (board.controls_identifier?(identifier)  ? 'yes' : 'no') + " needs_review_" + "no" , :id => "identifier_" + identifier.id.to_s}
                = identifier.class::FRIENDLY_NAME
            
