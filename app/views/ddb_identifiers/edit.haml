:javascript
  document.observe("dom:loaded", function() {
    if (#{XSUGAR_STANDALONE_ENABLED} && !#{defined?(@bad_leiden) ? @bad_leiden : false}) {
      Form.Element.disable('ddb_identifier_leiden_plus');
      Form.Element.disable('identifier_submit_top');
      Form.Element.disable('identifier_submit');
      
      $('ddb_identifier_leiden_plus').toggleClassName('loading');

      if (#{(!defined?(XSUGAR_STANDALONE_USE_PROXY).nil?) && XSUGAR_STANDALONE_USE_PROXY}) {
        request_url = "#{url_for(:controller => 'numbers_server_proxy', :only_path => true)}" + '/xsugar/';
      }
      else {
        request_url = "#{XSUGAR_STANDALONE_URL}";
      }
      
      new Ajax.Request(request_url, {
        method: 'post',
        parameters: $H({content: $F('ddb_identifier_leiden_plus'), type: 'epidoc', direction: 'xml2nonxml'}),
        onSuccess: function(response) {
          json = response.responseText.evalJSON();
          $('ddb_identifier_leiden_plus').toggleClassName('loading');
          
          if ("exception" in json) {
            $$('div#main > div.site').first().insert({
              top: new Element('div',{'class': 'flash error'}).update('Error converting XML to Leiden+. Please correct the error <a href="' + '#{polymorphic_path([@identifier.publication, @identifier], :action => :editxml)}' + '">on the XML page</a>.')
            });
          }
          else {
            Form.Element.setValue('ddb_identifier_leiden_plus',json.content);
            Form.Element.enable('ddb_identifier_leiden_plus');
            Form.Element.enable('identifier_submit_top');
            Form.Element.enable('identifier_submit');
            Form.Element.focus('ddb_identifier_leiden_plus');
          }
        },
        onFailure: function(response) {
          // reload after 10 seconds if we failed, should ONLY be used if JCS cache is working
          setTimeout("window.location.reload()",10000);
        }
      });
    }
  });

#main
  = render :partial => 'identifiers/edit_bar'
  .site
    = render :partial => 'identifiers/header'
    = render :partial => 'leiden_helpers', :locals => { :identifier => @identifier}

    #edit
      - form_for @identifier, :url => { :action => :update }, :html => {:name => 'helper'} do |f|
        = f.error_messages
        %br
        = render :partial => 'identifiers/edit_commit', :locals => { :f => f, :identifier => @identifier, :bad_leiden => @bad_leiden, :original_commit_comment => @original_commit_comment, :where_at => :top }
        = f.label "Leiden+"
        = clippy "ddb_identifier_leiden_plus"
        %br
        = f.text_area :leiden_plus, :disabled => !@identifier.mutable?, :lang => 'grc', 'xml:lang' => 'grc', :cols => 80, :rows => 40, :wrap => 'off', :class => 'greek observechange'
        = render :partial => 'identifiers/edit_commit', :locals => { :f => f, :identifier => @identifier, :bad_leiden => @bad_leiden, :original_commit_comment => @original_commit_comment, :where_at => :bottom }

= javascript_include_tag 'confirm'
