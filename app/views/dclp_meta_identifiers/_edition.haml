.editionContainer
  .clear
  .multi.edition{:id => 'multi_edition'}
    %ul.items{:id => 'multiItems_edition'}
      - @identifier[:edition].each_index do |editionIndex|
        - edition = DclpEdition::Edition.new( :edition => @identifier[:edition][editionIndex])
        - base = 'hgv_meta_identifier[edition][' + editionIndex.to_s + ']'
        - baseAttributes = base + '[attributes]'
        - baseChildren = base + '[children]'

        %li.edition{:id => 'edition_' + editionIndex.to_s }
          = label_tag baseChildren + '[link]', I18n.t('dclp.label.editionLink'), :class => 'meta editionLink', :title => @identifier.configuration.xpath(:edition)
          = text_field_tag baseChildren + '[link]', edition.link, :disabled => !@identifier.mutable?, :class => 'observechange editionLink', :onchange => "editionLinkChange(this);"
          = label_tag baseAttributes + '[type]', I18n.t('meta.label.type'), :class => 'meta editionType', :title => @identifier.configuration.xpath(:edition)
          = text_field_tag baseAttributes + '[type]', edition.type, :disabled => !@identifier.mutable?, :class => 'observechange editionType'
          = text_field_tag baseAttributes + '[subtype]', edition.subtype, :disabled => !@identifier.mutable?, :class => 'observechange editionSubtype'
          = select_tag baseAttributes + '[ubertype]', grouped_options_for_select({'' => DclpEdition.ubertypeOptions1, '--------' => DclpEdition.ubertypeOptions2}, edition.ubertype), :disabled => !@identifier.mutable?, :class => 'observechange editionubertype'
          = label_tag baseAttributes + '[language]', I18n.t('bibliography.language'), :class => 'meta editionLanguage', :title => @identifier.configuration.xpath(:edition), :style => (edition.subtype != 'translation' ? 'display: none;' : '')
          = select_tag baseAttributes + '[language]', options_for_select(DclpEdition.languageOptions, edition.language), :disabled => !@identifier.mutable?, :class => 'observechange editionLanguage', :style => (edition.subtype != 'translation' ? 'display: none;' : '')
          %p.clear

          %h5
            Preview
          %p.biblioPreview{:id => 'hgv_meta_identifier_edition_' + editionIndex.to_s + '_children_biblioPreview'}

          .extraContainer
            =render :partial => 'dclp_meta_identifiers/editionExtra', :locals => {:extraList => edition.extraList, :baseChildren => baseChildren, :editionIndex => editionIndex}
            .clear

          %span.delete{:onclick => 'multiRemove(this.parentNode)', :title => I18n.t('tooltip.multiDelete')} x
          %span.move{:title => I18n.t('tooltip.multiMove')} o

    = javascript_tag "Sortable.create('multiItems_edition', {overlap: 'horizontal', constraint: false, handle: 'move'});"
   
  .clear
