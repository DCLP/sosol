.publicationContainer
  Editio & Biblio
  
  hgv_meta_identifier vielleicht in dclp_meta_identifier meta umbenennen?
  
  = @identifier[:publication]
  .clear
  .multi.publication{:id => 'multi_publication'}
    %ul.items{:id => 'multiItems_publication'}
      - @identifier[:publication].each_index do |publicationIndex|
        - publication = DclpPublication::Publication.new( :publication => @identifier[:publication][publicationIndex])
        - base = 'hgv_meta_identifier[publication][' + publicationIndex.to_s + ']'
        - baseAttributes = base + '[attributes]'
        - baseChildren = base + '[children]'
      
        %li.publication{:id => 'publication_' + publicationIndex.to_s }
          %p.clear

          = label_tag baseChildren + '[link]', I18n.t('dclp.label.publicationLink'), :class => 'meta publicationLink', :title => @identifier.configuration.xpath(:publication)
          = text_field_tag baseChildren + '[link]', publication.link, :disabled => !@identifier.mutable?, :class => 'observechange publicationLink'
          %p.clear
            
          [PREVIEW]
          %p.clear

          = label_tag baseAttributes + '[type]', I18n.t('meta.label.type'), :class => 'meta publicationType', :title => @identifier.configuration.xpath(:publication)
          = select_tag baseAttributes + '[type]', options_for_select(DclpPublication.typeOptions, publication.type), :disabled => !@identifier.mutable?, :class => 'observechange publicationType'
          = select_tag baseAttributes + '[subtype]', options_for_select(DclpPublication.subtypeOptions, publication.subtype), :disabled => !@identifier.mutable?, :class => 'observechange publicationSubtype'
          = select_tag baseAttributes + '[ubertype]', grouped_options_for_select({'' => DclpPublication.ubertypeOptions1, '--------' => DclpPublication.ubertypeOptions2}, publication.ubertype), :disabled => !@identifier.mutable?, :class => 'observechange publicationubertype'
          %p.clear
        
          = label_tag baseAttributes + '[language]', I18n.t('bibliography.language'), :class => 'meta publicationLanguage', :title => @identifier.configuration.xpath(:publication)
          = select_tag baseAttributes + '[language]', options_for_select(DclpPublication.languageOptions, publication.language), :disabled => !@identifier.mutable?, :class => 'observechange publicationLanguage'
          
          %span.delete{:onclick => 'multiRemove(this.parentNode.parentNode)', :title => I18n.t('meta.tooltip.multiDelete')} x
          %span.move{:title => I18n.t('meta.tooltip.multiMove')} o

          .extraContainer
            =render :partial => 'dclp_meta_identifiers/publicationExtra', :locals => {:extraList => publication.extraList, :baseChildren => baseChildren, :publicationIndex => publicationIndex}
            .clear    
        
    = javascript_tag "Sortable.create('multiItems_publication', {overlap: 'horizontal', constraint: false, handle: 'move'});"
   
  .clear
