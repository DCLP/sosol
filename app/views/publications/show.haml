#main
  :javascript 
    function checkForComment() { comment_text = $('submit_comment').value; $('submit_button').disabled = comment_text.replace(/^\s+|\s+$/g, '') == ""; }
  = render :partial => 'identifiers/edit_bar'
  .site
    %h2 
      = @publication.title
      - if !@publication.status.nil? && @publication.status != ''
        == (#{@publication.status})
      
    = render :partial => "common/flash_all"    

    - if %w{new editing}.include?(@publication.status)
      #submit
        - if @show_submit
          %h3 Submit
          %p   
            You have changed the following items:
            %ul  
              - for identifier in @publication.identifiers      
                - if identifier.modified
                  %li
                    = "#{identifier.title} (#{identifier.class::FRIENDLY_NAME  })"
            They will be submitted to the proper boards for review.
            - form_tag  :controller => 'publications', :action => "submit"  do
              You will no longer be able to edit any of the items in this the publication once it is submitted. 
              %br
              %br
              = label_tag "Briefly describe the reason for your submission:"
              %br
              = text_area_tag 'submit_comment', "", :onkeyup => "checkForComment(event)", :cols => 70, :rows => 4
              %br
              %br
              = submit_tag "Submit to Boards", :disabled => true, :class => 'submit', :id => "submit_button"
        - else
          %b
            Publication may not be submitted at this time.
            %br
          - if !@publication.modified?
            No changes have been made.

    -# if owner is a board, and it is approved, add a button to make me the finalizer
    - if @publication.owner_type == "Board" && @publication.status == "approved"
      -# if i am already the finalizer dont show the button
      - finalizer = @publication.find_finalizer_user
      - if !(finalizer && finalizer.id == @current_user.id)
        = button_to "Make me finalizer", { :action => 'become_finalizer', :id => @publication.id }
    
    %br
    
    - if @current_user.developer
      - if @publication.modified?
        %h1 MODIFIED PUBLICATION
      
      
    - for identifier in @publication.identifiers 
      %h3
        == #{identifier.class::FRIENDLY_NAME} - 
        = render :partial => "identifiers/pn_link", :locals => {:identifier => identifier}

      %p
        = image_tag(identifier.class == DDBIdentifier ? 'ddb.gif' : 'hgv.gif')  
      
        = identifier.title
        - if @publication.status != "archived"
          = render :partial => identifier        

    - if @comments != nil  
      %h3 Comments 
      - for comment in @comments
        = render :partial => comment      
     
    - if @other_user_publications != nil && @other_user_publications.length > 0
      %br
      %h3 This publication is also being edited by:
      %ul
        - for other_pub in @other_user_publications
          %li
            = other_pub.creator.human_name
            == <#{mail_to(other_pub.creator.email, nil, :subject => "#{SITE_NAME} - Publication #{other_pub.title}")}>
            == (last edited #{time_ago_in_words(other_pub.updated_at)} ago)
      %br


    - if %w{editing new}.include?(@publication.status)
      - for class_type in @creatable_identifiers
        - create_type = class_type.constantize::FRIENDLY_NAME
        - create_type = 'Create new ' + create_type
        = link_to (create_type, options = {:controller => 'identifiers', :action => 'create', :publication_id => @publication.id, :identifier_type => class_type, :method => :post}, html_options = {:id => "#{create_type}", :onclick => "$('#{create_type}').remove();"})
        %br

    - if @allow_delete
      = link_to "Delete", :controller => 'publications', :id => @publication.id, :action => "confirm_delete"
      %br
  
    - if @publication.status == "committed"
      = link_to "Archive", :controller => 'publications', :id => @publication.id, :action => "confirm_archive"
      %br
  
    - if @current_user.developer  
      = link_to "developer immediate delete", @publication, :method => :delete 
      %br
